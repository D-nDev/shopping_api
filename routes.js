process.env.TZ = "America/Sao_Paulo";
require("dotenv").config();
require('module-alias/register');
const express = require("express");
const cookie_parser = require("cookie-parser");
const loginController = require("@controller/loginController");
const registerController = require("@controller/registerController");
const forgotpassemailController = require("@controller/forgotPassEmailController");
const forgotpasssmsController = require("@controller/forgotPassSMSController");
const resetpassController = require("@controller/resetPassController");
const addnewproductController = require("@controller/addNewProductController");
const addnewproductgroupController = require("@controller/addNewProductGroupController");
const addnewproviderController = require("@controller/addNewProviderController");
const addnewpromotionalcodeController = require("@controller/addNewPromotionalCodeController");
const addnewpaymentmethodController = require("@controller/addNewPaymentMethodController");
const deleteproductController = require("@controller/deleteProductController");
const deleteproductgroupController = require("@controller/deleteProductGroupController");
const deleteproviderController = require("@controller/deleteProviderController");
const deletepromotionalcodeController = require("@controller/deletePromotionalCodeController");
const deletepaymentmethodController = require("@controller/deletePaymentMethodController");
const deleteaccountController = require("@controller/deleteAccountController");
const getproductController = require("@controller/getProductController");
const getproductgroupController = require("@controller/getProductGroupController");
const getproviderController = require("@controller/getProviderController");
const getpromotionalcodeController = require("@controller/getPromotionalCodeController");
const getpaymentmethodController = require("@controller/getPaymentMethodController");
const updateproductController = require("@controller/updateProductController");
const updateproductgroupController = require("@controller/updateProductGroupController");
const updateproviderController = require("@controller/updateProviderController");
const updatepromotionalcodeController = require("@controller/updatePromotionalCodeController");
const updatepaymentmethodController = require("@controller/updatePaymentMethodController");
const addproducttocartController = require("@controller/addProductToCartController");
const getusercartController = require("@controller/getUserCartController");
const addcoupontocartController = require("@controller/addCouponToCartController");
const getusercouponController = require("@controller/getUserCouponController");
const deletecouponfromusercartController = require("@controller/deleteCouponFromUserCartController");
const updateusercartControler = require("@controller/updateUserCartController");
const deleteproductfromusercartController = require("@controller/deleteProductFromUserCartController");
const buyController = require("@controller/buyController");
const contactsupportController = require("@controller/contactSupportController");
const requestuserrefundController = require("@controller/requestUserRefundController");
const approverefundController = require("@controller/approveRefundController");
const logoutController = require("@controller/logoutController");
const getcashflowController = require("@controller/getCashFlowController");
const getsoldbymonthController = require("@controller/getSoldByMonthController");
const getuserordersController = require("@controller/getUserOrdersController");
const getusersalesController = require("@controller/getUserSalesController");
const verifyToken = require("@middlewares/userToken").verifyToken;
const verifyTokenAdmin = require("@middlewares/adminToken").verifyTokenAdmin;
const app = express();

const router = express.Router();

app.use(express.urlencoded({ extended: false }));
app.use(express.json());
app.use(cookie_parser("1234"));

router.post("/login", loginController.post);
router.post("/logout", logoutController.post);
router.post("/register", registerController.post);
router.post("/requestpass_email", forgotpassemailController.post);
router.post("/requestpass_sms", forgotpasssmsController.post);
router.post("/resetpass", resetpassController.post);
router.post("/addproduct", verifyTokenAdmin, addnewproductController.post);
router.post("/addgroup", verifyTokenAdmin, addnewproductgroupController.post);
router.post("/addprovider", verifyTokenAdmin, addnewproviderController.post);
router.post("/addcode", verifyTokenAdmin, addnewpromotionalcodeController.post);
router.post("/addpaymentmethod", verifyTokenAdmin, addnewpaymentmethodController.post);
router.post("/addcart", verifyToken, addproducttocartController.post);
router.post("/addcoupon", verifyToken, addcoupontocartController.post);
router.post("/buy", verifyToken, buyController.post);
router.post("/contact", contactsupportController.post);
router.post("/requestrefund", verifyToken, requestuserrefundController.post);
router.post("/refund", verifyTokenAdmin, approverefundController.post);
router.get("/product", getproductController.get);
router.get("/group", getproductgroupController.get);
router.get("/provider", verifyTokenAdmin, getproviderController.get);
router.get("/code", verifyTokenAdmin, getpromotionalcodeController.get);
router.get("/paymentmethod", verifyTokenAdmin, getpaymentmethodController.get);
router.get("/cart", verifyToken, getusercartController.get);
router.get("/coupon", verifyToken, getusercouponController.get);
router.get("/cashflow", verifyTokenAdmin, getcashflowController.get);
router.get("/salesmonth", verifyTokenAdmin, getsoldbymonthController.get);
router.get("/myorders", verifyToken, getuserordersController.get);
router.get("/usersales", verifyToken, getusersalesController.get);
router.put("/product", verifyTokenAdmin, updateproductController.put);
router.put("/group", verifyTokenAdmin, updateproductgroupController.put);
router.put("/provider", verifyTokenAdmin, updateproviderController.put);
router.put("/code", updatepromotionalcodeController.put);
router.put("/paymentmethod", verifyTokenAdmin, updatepaymentmethodController.put);
router.put("/modifycart", verifyToken, updateusercartControler.put);
router.delete("/deleteproduct", verifyTokenAdmin, deleteproductController.delete);
router.delete("/deletegroup", verifyTokenAdmin, deleteproductgroupController.delete);
router.delete("/deleteprovider", verifyTokenAdmin, deleteproviderController.delete);
router.delete("/deletecode", verifyTokenAdmin, deletepromotionalcodeController.delete);
router.delete("/deletepaymentmethod", verifyTokenAdmin, deletepaymentmethodController.delete);
router.delete("/deleteaccount", verifyTokenAdmin, deleteaccountController.delete);
router.delete("/coupon", verifyToken, deletecouponfromusercartController.delete);
router.delete("/removeproduct", verifyToken, deleteproductfromusercartController.delete);

module.exports = router;
